require 'alces/forge/commands/command_base'

module Alces
  module Forge
    module Commands
      class Install < CommandBase
        def install(args, options)
          package_props = split_package_path(args[0])

          metadata = get_package_metadata(package_props[:user], package_props[:package], package_props[:version])

          raise "No package found for #{args[0]}" unless metadata

          puts "Found package: #{metadata['attributes']['name']} version #{metadata['attributes']['version']}"

        end

        private

        def split_package_path(path)
          match = /(?<user>[^\/]+)\/(?<package>[^\/]+)(\/(?<version>[^\/]+))?/.match(path)

          raise 'Unrecognised package format. Please specify as username/packagename[/version]' unless match

          match
        end

        def get_package_metadata(user, package, version)
          params = {
              'filter[username]' => user,
              'filter[name]' => package,
              :sort => '-version'
          }

          if version
            params['filter[version]'] = version
          else
            params['sort'] = '-version'  # 'Newest' first (assuming sensible ordering from the server)
            # NB We can't sort on the standard Rails attributes (createdAt / updatedAt) since these will all read the
            # same for the Alces autogenerated packages, and earlier versions might be added later anyway.
          end

          api.get('packages', params: params)['data'].first
        end
      end
    end
  end
end
